# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        hA=headA
        hB=headB
        l1=[]
        l2=[]
        
        while hA:
            l1.append(hA)
            hA=hA.next
            
            
        while hB:
            l2.append(hB)
            hB=hB.next
                       
        last=None
        i=-1
        
        try:
            while l1[i]==l2[i]:
                last = l1[i]
                i-=1
        except:
            return last
        return last

# 39 / 39 test cases passed.
# Status: Accepted
# Runtime: 196 ms
# Memory Usage: 29.8 MB
#Submitted: 23/09/2022